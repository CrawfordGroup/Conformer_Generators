#!/bin/zsh

# Prompts for user input.
echo -n 'Molecule Name: '
read molecule_name

echo -n 'Spectroscopy: '
read spectroscopy

echo -n 'Basis Set: '
read basis_set

if [ ${spectroscopy} != VCD -a ${spectroscopy} != ROA ]; then
    echo "${spectroscopy} is not a valid Gaussian spectroscopy supported in this script."
    echo "Valid spectroscopies currently implemented are VCD and ROA."
    exit 1
fi

if [ ${spectroscopy} = ROA ]; then
    echo -n 'Frequency of Incident Radiation (nm): '
    read frequency
fi

# Obtains the number of ring structures from the number of .xyz files available with the formatted naming scheme.
ring_structures=$(ls -1U "${molecule_name}_"* | wc -l)

cwd=$(pwd)
print "$cwd"

mkdir "$molecule_name"

rs=1
while [ $rs -le $ring_structures ]; do

    # Generates a file with Z-matrix data for all the conformers (does not keep the initial structure).
    obabel ${molecule_name}_${rs}.xyz -ogzmat -O ${molecule_name}_${rs}_conformers.gzmat --confab --conf 100000
    
    # Obtains the number of conformers.
    number_of_conformers=$(grep -c "!Put Keywords" ${molecule_name}_${rs}_conformers.gzmat)
    echo "Number of Conformers: $((number_of_conformers))"
    
    # Splits the output file from the conformer search into one file per conformer.
    csplit -ks -f cmpd_ -n 1 ${molecule_name}_${rs}_conformers.gzmat /Keyword/ {$((number_of_conformers-2))}
    cd "$molecule_name"
    
    # Makes the directory for the ring structure.
    mkdir "rs_${rs}"
    cd "rs_${rs}"
    
    conformer_count=1
    while [ $conformer_count -le $number_of_conformers ]; do
        cd $cwd/$molecule_name/rs_${rs}

        # Makes the directory for a specific conformer.
        mkdir "cmpd_$conformer_count"

        # Copies the original submission script into the conformer's directory.
        cp $cwd/G09_sub_SLURM.sh $cwd/$molecule_name/rs_${rs}/cmpd_$conformer_count/

        # Modifies the submission script with conformer specific data.
        sed -i '' 's/MOLECULE_NAME_CONFORMER_NUMBER/'${molecule_name}_rs_${rs}_cmpd_${conformer_count}_Opt${spectroscopy}'/g' $cwd/$molecule_name/rs_${rs}/cmpd_$conformer_count/G09_sub_SLURM.sh

        # Makes the submission script executable.
        chmod +x $cwd/$molecule_name/rs_${rs}/cmpd_$conformer_count/G09_sub_SLURM.sh

        # Copies the original input file into the conformer's directory.
        cp $cwd/input.dat $cwd/$molecule_name/rs_${rs}/cmpd_$conformer_count/

        # Modifies the input file with conformer specific data.
        sed -i '' 's/MOLECULE_NAME_CONFORMER_NUMBER/'${molecule_name}_rs_${rs}_cmpd_${conformer_count}_Opt${spectroscopy}'/g' $cwd/$molecule_name/rs_${rs}/cmpd_$conformer_count/input.dat

        # Modifies the input with spectroscopic specific data.
        sed -i '' 's/SPECTROSCOPY/'${spectroscopy}'/g' $cwd/$molecule_name/rs_${rs}/cmpd_$conformer_count/input.dat
        
        # Modifies the input with basis set specified by the user.
        sed -i '' 's/BASIS_SET/'${basis_set}'/g' $cwd/$molecule_name/rs_${rs}/cmpd_$conformer_count/input.dat

        cd $cwd
        let conformer_count+=1
    done
    
    # Inserts Z-matrix data into the input file and deletes excess files.
    conformer_count=1
    while [ $conformer_count -le $number_of_conformers ]; do
        cd $cwd
        for file in cmpd_?; do
            sed -i '' -e '1,5d' $file
            mv $file cmpd_${conformer_count}.txt
            sed -i '' -e "/REPLACE/r $cwd/cmpd_${conformer_count}.txt" $cwd/${molecule_name}/rs_${rs}/cmpd_${conformer_count}/input.dat
            sed -i '' -e "/REPLACE/d" $cwd/${molecule_name}/rs_${rs}/cmpd_${conformer_count}/input.dat
            rm $cwd/cmpd_${conformer_count}.txt
            
            # For ROA appends the frequency of incident radiation.
            if [ ${spectroscopy} = ROA ]; then
                echo "${frequency}nm" >> $cwd/$molecule_name/rs_${rs}/cmpd_${conformer_count}/input.dat
                echo "" >> $cwd/$molecule_name/rs_${rs}/cmpd_${conformer_count}/input.dat
                echo "" >> $cwd/$molecule_name/rs_${rs}/cmpd_${conformer_count}/input.dat
            else
                echo "" >> $cwd/$molecule_name/rs_${rs}/cmpd_${conformer_count}/input.dat
                echo "" >> $cwd/$molecule_name/rs_${rs}/cmpd_${conformer_count}/input.dat
            fi

            let conformer_count+=1
        done
    done
    rm "${molecule_name}_${rs}_conformers.gzmat"
    let rs+=1
done

cd "$molecule_name"

# Notes: 
# If an environment has been created for Open Babel then you must be in that enviroment to run this script.
# Download all ring structures and name the files as "molecule_1.xyz", "molecule_2.xyz", etc.. Then enter the molecule name and run the script.
# The number of ring structures is generated by the the number of files with the conformer name in the file name. If files have not been renamed properly or there are additional files with this name scheme in the folder, this can create problems.
# This will create a single folder with all the conformations and their respective input and ARC submission files.
